MyFaces Known Issues
====================

* Sun's current implementation of the FacesTag has a bug, that makes problems
  when you use IterationTag support:
  For each tag they count the number of children tags in a member "numChildren".
  Well, they do not reset this member to 0 in doAfterBody(). So, on the
  next iteration this counter continues counting and components that do
  not have an id are created again during findComponent().
  Solution:
  - Either give every tag within an IterationTag an id,
  - or subclass all your common tags from MyFacesTag, that fixes this behaviour.

* Dynamic addition of components as stated in JSF 1.0 PRD 2.4.2.4 is not (yet)
  supported when using the "saveStateInClient" feature.

* Method "getClientId" in UIComponentBase of current JSF API has a bug (side-effect):
  It changes the componentId (to the clientId) which is fatal when you
  have nested naming containers.
  Please overwrite getClientId in your self-written components and delegate it
  to UIComponentUtils.getClientId.
  (see MyFacesUIOutput for example)

* Method "addFacet" in UIComponentBase of current JSF API has a bug:
  It does not add the facet to the naming container.
  Please overwrite addFacet in your self-written components and call
  UIComponentUtils.ensureComponentInNamingContainer after calling the super
  addFacet method.
  (see MyFacesUIOutput for example)

* Methods "removeChild", "removeFacet" and "clearChildren" in UIComponentBase
  of current JSF API have bugs:
  They do not remove the child from the naming container. So a findComponent
  will still find the component although it is no longer in tree.
  Please use the corresponding methods in UIComponentUtils to overcome this
  issue.

TODO... (Many others!)
