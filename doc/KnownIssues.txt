MyFaces Known Issues
====================

* There is a known issue for Sun's current implementation of the FacesTag,
  that makes problems when you use IterationTag support or you have conditional
  Tags. Please subclass all your own tag classes from MyFacesTag, that fixes
  this behaviour.

* Dynamic addition of components as stated in JSF 1.0 PRD2 2.4.2.4 is not (yet)
  supported when using the "saveStateInClient" feature.

* Method "getClientId" in UIComponentBase of current JSF API has a bug (side-effect):
  It changes the componentId (to the clientId) which is fatal when you
  have nested naming containers.
  Please overwrite getClientId in your self-written components and delegate it
  to UIComponentUtils.getClientId.
  (see MyFacesUIOutput for example)

* Method "addFacet" in UIComponentBase of current JSF API has a bug:
  It does not add the facet to the naming container.
  Please overwrite addFacet in your self-written components and call
  UIComponentUtils.ensureComponentInNamingContainer after calling the super
  addFacet method.
  (see MyFacesUIOutput for example)

* Methods "removeChild", "removeFacet" and "clearChildren" in UIComponentBase
  of current JSF API have bugs:
  They do not remove the child from the naming container. So a findComponent
  will still find the component although it is no longer in tree.
  Please use the corresponding methods in UIComponentUtils to overcome this
  issue.

* id attributes in Tomcat 5:
  Tomcat 5 tries to translate id attributes of tags to java variables without
  revision of the name. So, you must not use hyphens (or other special
  characters) in id attributes.

* Dynamically included JSP code by means of the <jsp:include> tag must not
  contain JSF tags when using the "Minimizing State Saving" feature.
  The MinimizingStateSaver relies on the fact, that the current page is
  fully parsable. This is necessary, because MinimizingStateSaver needs
  static information about each component: Initial property and attribute
  values, for example. Also, MinimizingStateRestorer must be able to
  build and reconstitute the whole tree from static information before
  anything is rendered.

TODO... (Many others!)
