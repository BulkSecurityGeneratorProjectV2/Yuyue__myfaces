##
#set ($I = "") #set ($I_ = "") #set ($I__ = "") #set ($I___ = "")
#set ($I____ = "") #set ($I_____ = "") #set ($I______ = "")
##

$I#if ($c.componentType)
    public static final String COMPONENT_TYPE = "$c.componentType";
$I#end
$I#if ($c.componentFamily)
    public static final String COMPONENT_FAMILY = "$c.componentFamily";
$I#end
$I#if ($c.rendererType)
    private static final String DEFAULT_RENDERER_TYPE = "$c.rendererType";
$I#end
$I#foreach ($f in $c.propertyFields)
$I__#if ($f.defaultValue)
    private static final $f.type DEFAULT_$f.ucaseName = $f.defaultLiteral;
$I__#end
$I#end

$I#foreach ($f in $c.propertyFields)
    private $f.fieldType _$f.name = null;
$I#end

$I#if ( $c.isGenerateConstructor() )
    public ${c.className}()
    {
$I__#if ($c.rendererType)
        setRendererType(DEFAULT_RENDERER_TYPE);
$I__#end
    }
$I#end

$I#if ($c.componentFamily)
    public String getFamily()
    {
        return COMPONENT_FAMILY;
    }
$I#end

$I#foreach ($f in $c.propertyFields)
$I__#if ($f.isPrimitiveType())
$I____#if ( $f.isGenerateSetter() )
    public void ${f.setterMethodName}($f.type $f.name)
    {
$I______#if ($f.isPrimitiveBoolean())
        _$f.name = ${f.fieldType}.valueOf($f.name);
$I______#else
        _$f.name = new ${f.fieldType}($f.name);
$I______#end
    }
$I____#end

    public $f.type ${f.getterMethodName}()
    {
        if (_$f.name != null) return _${f.name}.${f.primitiveValueMethod}();
        ValueBinding vb = getValueBinding("$f.name");
        ${f.fieldType} v = vb != null ? (${f.fieldType})vb.getValue(getFacesContext()) : null;
$I____#if ($f.defaultValue)
        return v != null ? v.${f.primitiveValueMethod}() : DEFAULT_$f.ucaseName;
$I____#else
        return v != null ? v.${f.primitiveValueMethod}() : $f.defaultLiteral;
$I____#end
    }

$I__#else
$I____#if ( $f.isGenerateSetter() )
    public void ${f.setterMethodName}($f.type $f.saveName)
    {
        _$f.name = $f.saveName;
    }
$I____#end

    public $f.type ${f.getterMethodName}()
    {
        if (_$f.name != null) return _$f.name;
        ValueBinding vb = getValueBinding("$f.name");
$I____#if ($f.defaultValue)
        return vb != null ? ($f.type)vb.getValue(getFacesContext()) : DEFAULT_$f.ucaseName;
$I____#else
        return vb != null ? ($f.type)vb.getValue(getFacesContext()) : null;
$I____#end
    }

$I__#end
$I#end

$I#if ($c.isGenerateStateMethods() )
$I__#if ($c.saveStateFields.size() > 0)
    public Object saveState(FacesContext context)
    {
        Object values[] = new Object[${c.getSaveStateFieldsCountPlusOne()}];
        values[0] = super.saveState(context);
$I____#foreach ($f in $c.saveStateFields)
$I______#if ($f.isWrapForSavingState())
        values[$f.saveStateFieldIndex] = wrapForStateSaving(context, _${f.name});
$I______#else
        values[$f.saveStateFieldIndex] = _$f.name;
$I______#end
$I____#end
        return ((Object) (values));
    }

    public void restoreState(FacesContext context, Object state)
    {
        Object values[] = (Object[])state;
        super.restoreState(context, values[0]);
$I____#foreach ($f in $c.saveStateFields)
$I______#if ($f.isWrapForSavingState())
        _$f.name = ($f.fieldType)unwrapForStateRestoring(context, values[$f.saveStateFieldIndex]);
$I______#else
        _$f.name = ($f.fieldType)values[$f.saveStateFieldIndex];
$I______#end
$I____#end
    }
$I__#end
$I#end
