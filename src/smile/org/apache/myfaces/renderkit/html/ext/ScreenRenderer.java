/**
 * MyFaces - the free JSF implementation
 * Copyright (C) 2003, 2004  The MyFaces Team (http://myfaces.sourceforge.net)
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 */
package net.sourceforge.myfaces.renderkit.html.ext;

import javax.faces.component.UIComponent;
import javax.faces.context.FacesContext;
import javax.faces.context.ResponseWriter;
import javax.servlet.http.HttpServletRequest;
import java.io.IOException;

/**
 * @author Dimitry D'hondt
 */
public class ScreenRenderer extends net.sourceforge.myfaces.renderkit.RendererBase {

	private String title = null;
	
	/**
	 * The default UIScreen will write the response as an HTML output
	 * and generate an HTML form for submitting.
	 * @see javax.faces.component.UIComponent#encodeBegin(javax.faces.context.FacesContext)
	 */
	public void encodeBegin(FacesContext ctx, UIComponent component ) throws IOException {
		ResponseWriter out = ctx.getResponseWriter();
		if (!component.isRendered() || !(component instanceof net.sourceforge.myfaces.application.component.ext.Screen)) {
			return;
		}
		net.sourceforge.myfaces.application.component.ext.Screen screen = (net.sourceforge.myfaces.application.component.ext.Screen) component;
		String clientId = screen.getClientId(ctx);
		
		out.startElement("html", screen);
		out.startElement("head",screen);
		out.startElement("title",screen);
		if(screen.getTitle() != null) {
			out.writeText(screen.getTitle(),"title");
		} else {
			out.writeText("This page was generated by Smile.","title");
		}
		out.endElement("title");
		out.endElement("head");
		out.startElement("body",screen);
		out.writeAttribute("leftmargin","0",null);
		out.writeAttribute("rightmargin","0",null);
		out.writeAttribute("topmargin","0",null);
		
		out.startElement("script",screen);
		out.writeAttribute("language","javascript",null);
		out.writeAttribute("src","script/overlib.js",null);
		out.write(" ");		
		out.endElement("script");
		
		out.startElement("script",screen);
		out.writeAttribute("language","javascript",null);
		out.writeAttribute("src","script/x_load.js",null);		
		out.write(" ");		
		out.endElement("script");

		out.startElement("script",screen);
		out.writeAttribute("language","javascript",null);
		out.writeAttribute("src","script/smile.js",null);		
		out.write(" ");		
		out.endElement("script");
		
		net.sourceforge.myfaces.renderkit.RenderUtils.ensureAllTagsFinished();
//		out.write("<div id=\"overDiv\" style=\"position:absolute; visibility:hidden; z-index:32000;\"></div><script language=\"javascript\" src=\"/smile/overlib.js\"></script>");
		out.write("<div id=\"overDiv\" style=\"position:absolute; visibility:hidden; z-index:32000;\"></div>");

		out.startElement("form",screen);
		out.writeAttribute("name", clientId, "clientId");
		out.writeAttribute("id", clientId, "clientId");
		out.writeURIAttribute("action",((HttpServletRequest)ctx.getExternalContext().getRequest()).getRequestURL().toString(),null);
		out.writeAttribute("method", "post", null);
		screen.setEndScript(new StringBuffer());
		screen.getEndScript().append("\nxLoad('script/x_core.js','script/x_event.js','script/x_dom.js','script/x_tip.js');\n");
		screen.getEndScript().append("window.onload = function() {");
	}

	/**
	 * The default UIScreen will close the HTML form and HTML elements.
	 * @see javax.faces.component.UIComponent#encodeEnd(javax.faces.context.FacesContext)
	 */
	public void encodeEnd(FacesContext ctx, UIComponent component) throws IOException {
		if (!component.isRendered() || !(component instanceof net.sourceforge.myfaces.application.component.ext.Screen)) {
			return;
		}


		net.sourceforge.myfaces.application.component.ext.Screen screen = (net.sourceforge.myfaces.application.component.ext.Screen) component;
		screen.getEndScript().append("}");

		ResponseWriter out = ctx.getResponseWriter();
		out.startElement("script",null);
		out.writeAttribute("language","javascript",null);
		out.write(screen.getEndScript().toString());
		out.endElement("script");

		out.endElement("form");
		out.endElement("body");
		out.endElement("html");
	}

	public void decode(FacesContext facesContext, UIComponent component)
	{
		net.sourceforge.myfaces.application.component.ext.Screen screen = (net.sourceforge.myfaces.application.component.ext.Screen) component;

		screen.setSubmitted(true);
	}
}