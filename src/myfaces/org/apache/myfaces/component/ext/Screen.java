/**
 * Smile, the open-source JSF implementation.
 * Copyright (C) 2003  The smile team (http://smile.sourceforge.net)
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 */
package net.sourceforge.myfaces.component.ext;

import javax.faces.component.UIForm;
import javax.faces.context.FacesContext;

/**
 * UIScreen is the root component for smile JSF component trees. 
 */
public class Screen extends UIForm {

	private StringBuffer endScript = new StringBuffer();
	private String title = null;
	
	public Screen() {
		setRendererType("net.sourceforge.myfaces.Screen");
	}
	
//	/**
//	 * The default UIScreen will write the response as an HTML output
//	 * and generate an HTML form for submitting.
//	 * @see javax.faces.component.UIComponent#encodeBegin(javax.faces.context.FacesContext)
//	 */
//	public void encodeBegin(FacesContext context) throws IOException {
//		ResponseWriter out = context.getResponseWriter();
//		out.startElement("HTML", this);
//		out.startElement("HEAD",this);
//		out.startElement("TITLE",this);
//		if(getTitle() != null) {
//			out.writeText(getTitle(),"title");
//		} else {
//			out.writeText("This page was generated by Smile.","title");
//		}
//		out.endElement("TITLE");
//		out.endElement("HEAD");
//		out.startElement("BODY",this);
//		
//		out.startElement("script",this);
//		out.writeAttribute("language","javascript",null);
//		out.writeAttribute("src","/smile/overlib.js",null);		
//		out.endElement("script");
//
//		out.startElement("script",this);
//		out.writeAttribute("language","javascript",null);
//		out.writeAttribute("src","/smile/script/smile.js",null);		
//		out.endElement("script");
//		
//		RenderUtils.ensureAllTagsFinished();
//		out.write("<div id=\"overDiv\" style=\"position:absolute; visibility:hidden; z-index:1000;\"></div><script langauge=\"JavaScript\" src=\"/smile/overlib.js\"></script>");
//
//		out.startElement("FORM",this);
//		out.writeAttribute("method","POST",null);
//		out.writeAttribute("id","form",null);
//		out.writeURIAttribute("action",((HttpServletRequest)context.getExternalContext().getRequest()).getRequestURL().toString(),null);
//	}
//
//	/**
//	 * The default UIScreen will close the HTML form and HTML elements.
//	 * @see javax.faces.component.UIComponent#encodeEnd(javax.faces.context.FacesContext)
//	 */
//	public void encodeEnd(FacesContext context) throws IOException {
//		ResponseWriter out = context.getResponseWriter();
//		out.endElement("FORM");
//		out.endElement("BODY");
//		out.endElement("HTML");
//	}

	/**
	 * @return Returns the title.
	 */
	public String getTitle() {
		return title;
	}

	/**
	 * @param title The title to set.
	 */
	public void setTitle(String title) {
		this.title = title;
	}
	
	/**
	 * @see javax.faces.component.UIPanel#saveState(javax.faces.context.FacesContext)
	 */
	public Object saveState(FacesContext ctx) {
		Object values[] = new Object[2];
		values[0] = super.saveState(ctx);
		values[1] = title;
		return ((Object) (values));
	}
	
	/**
	 * @see javax.faces.component.UIPanel#restoreState(javax.faces.context.FacesContext, java.lang.Object)
	 */
	public void restoreState(FacesContext ctx, Object state) {
		Object values[] = (Object[])state;
		super.restoreState(ctx, values[0]);
		title = (String)values[1];
	}
	
	/**
	 * @return
	 */
	public StringBuffer getEndScript() {
		return endScript;
	}

	/**
	 * @param buffer
	 */
	public void setEndScript(StringBuffer buffer) {
		endScript = buffer;
	}

}