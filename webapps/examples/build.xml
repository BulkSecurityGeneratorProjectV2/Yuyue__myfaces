<?xml version="1.0" encoding="iso-8859-1"?>
<project name="myfaces-examples" default="compile-and-copy-libs">

    <property environment="env"/>

    <!-- Constants -->
    <property name="project.dir" location="${basedir}/../.."/>
    <property name="examples.src" location="${basedir}/src"/>
    <property name="examples.web" location="${basedir}/web"/>
    <property name="examples.doc" location="${basedir}/doc"/>
    <property name="web-inf.classes.dir" location="${examples.web}/WEB-INF/classes"/>
    <property name="web-inf.lib.dir" location="${examples.web}/WEB-INF/lib"/>
    <property name="myfaces.doc" location="${project.dir}/doc"/>

    <!-- Properties -->
    <property file="../../build.properties"/>
    <property file="../../manifest.properties"/>
    <property file="build.properties"/>

    <!-- Temporary dir. May be overridden in build.properties -->
    <property name="temp.dir" value="${env.TEMP}"/>


    <!-- classpath for compiling -->
    <path id="examples.class.path">
        <pathelement location="${jsf-api.jar}"/>
        <pathelement location="${servlet.jar}"/>
        <pathelement location="${myfaces.jar}"/>
    </path>


    <target name="-myfaces-jar" unless="myfaces.jar.available">
        <!-- creates myfaces.jar via main buildfile if it does not exist -->
        <ant dir="../.."
             antfile="build.xml"
             target="myfaces-jar"
             inheritall="false"/>
    </target>

    <target name="-check-myfaces-jar">
        <!-- check if myfaces.jar exist -->
        <available file="${myfaces.jar}" property="myfaces.jar.available"/>
        <antcall target="-myfaces-jar"/>
    </target>


    <target name="compile-and-copy-libs"
            depends="-check-myfaces-jar"
            description="compiles the examples java classes to WEB-INF/classes and copies all needed libs to WEB-INF/lib">
        <mkdir dir="${web-inf.classes.dir}"/>
        <javac srcdir="${examples.src}"
               destdir="${web-inf.classes.dir}"
               optimize="off"
               classpathref="examples.class.path">
        </javac>
        <copy todir="${web-inf.classes.dir}">
            <fileset dir="${examples.src}"
                     includes="**"
                     excludes="**/*.java
                               **/package.html"/>
        </copy>

        <mkdir dir="${web-inf.lib.dir}"/>
        <copy todir="${web-inf.lib.dir}">
            <fileset file="${cos.jar}"/>
            <fileset file="${jsf-api.jar}"/>
            <fileset file="${myfaces.jar}"/>
        </copy>
    </target>



    <target name="web_ss"
            depends="compile-and-copy-libs"
            description="copies the examples web application to a new dir and adjusts all options to 'save state in server sessions'." >

        <mkdir dir="${web_ss.dir}"/>
        <copy todir="${web_ss.dir}">
            <fileset dir="${examples.web}"
                     includes="**"
                     excludes="WEB-INF/web.xml
                               WEB-INF/web_ss.xml" />
        </copy>
        <copy file="${examples.web}/WEB-INF/web_ss.xml"
              tofile="${web_ss.dir}/WEB-INF/web.xml" />

        <replace dir="${web_ss.dir}" includes="**/*.jsp,**/*.inc">
            <replacetoken><![CDATA[<%@ page session="false"]]></replacetoken>
            <replacevalue><![CDATA[<%@ page session="true"]]></replacevalue>
        </replace>
        <replace dir="${web_ss.dir}" includes="**/*.jsp,**/*.inc">
            <replacetoken><![CDATA[scope="request"]]></replacetoken>
            <replacevalue><![CDATA[scope="session"]]></replacevalue>
        </replace>

    </target>


    <target name="release"
            depends="compile-and-copy-libs, web_ss"
            description="creates the examples release file myfaces-x.x.x-examples.tgz (don't forget to adjust manifest.properties!)">
        <tar destfile="${project.dir}/myfaces-${manifest.impl.version}-examples.tgz"
             compression="gzip">
            <tarfileset dir="${myfaces.doc}"
                        excludes="api/**"
                        prefix="myfaces-${manifest.impl.version}/doc"/>
            <tarfileset dir="${examples.doc}"
                        prefix="myfaces-${manifest.impl.version}/webapps/examples/doc"/>
            <tarfileset dir="${examples.src}"
                        prefix="myfaces-${manifest.impl.version}/webapps/examples/src"/>
            <tarfileset dir="${examples.web}"
                        excludes="WEB-INF/lib/jsf-api.jar,
                                  WEB-INF/web_ss.xml"
                        prefix="myfaces-${manifest.impl.version}/webapps/examples/web"/>
            <tarfileset dir="${basedir}"
                        includes="*"
                        excludes="*.properties,.cvsignore"
                        prefix="myfaces-${manifest.impl.version}/webapps/examples"/>
            <tarfileset dir="${web_ss.dir}"
                        excludes="WEB-INF/lib/jsf-api.jar"
                        prefix="myfaces-${manifest.impl.version}/webapps/examples/web_serversaving"/>
        </tar>
    </target>



    <target name="clean"
            description="deletes all files that were built">
        <delete quiet="true" failonerror="false" includeEmptyDirs="true">
            <fileset dir="${web-inf.classes.dir}"/>
            <fileset dir="${web-inf.lib.dir}"/>
            <fileset dir="${web_ss.dir}"/>
            <fileset file="${project.dir}/myfaces-*-examples.tgz"/>
        </delete>
    </target>



</project>