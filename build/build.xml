<?xml version="1.0" encoding="iso-8859-1"?>
<project name="myfaces-release" default="all" >

    <property environment="env"/>

    <!-- Constants -->
    <property name="project.dir" location="${basedir}/.."/>
    <property name="release.dir" location="${basedir}/release"/>
    <property name="jsfapi.src" location="${project.dir}/src/jsfapi"/>
    <property name="share.src" location="${project.dir}/src/share"/>
    <property name="myfaces.src" location="${project.dir}/src/myfaces"/>
    <property name="components.src" location="${project.dir}/src/components"/>
    <property name="cactus.src" location="${project.dir}/src/cactus"/>
    <property name="junit.src" location="${project.dir}/src/junit"/>
    <property name="tlds.dir" location="${project.dir}/tlds"/>
    <property name="doc.dir" location="${project.dir}/doc"/>
    <property name="build.dir" location="${project.dir}/build"/>
    <property name="nightly.dir" location="${build.dir}/nightly"/>
    <property name="dist.dir" location="${build.dir}/dist"/>
    <property name="webapp.dist.dir" location="${dist.dir}/webapp"/>
    <property name="conf.dir" location="${project.dir}/conf"/>
    <property name="apps.dir" location="${project.dir}/webapps"/>
    <property name="wml.src" location="${project.dir}/src/wml"/>
    <property name="xdoclet.src" location="${project.dir}/src/xdoclet"/>
    <property name="generated.src" location="${project.dir}/src/generated"/>

    <!-- Properties -->
    <property file="build.local.properties"/>
    <property file="build.default.properties"/>
    <property file="manifest.properties"/>

    <property name="release.version" value="${manifest.impl.version}"/>
    <property name="src.release.bundle" location="${release.dir}/myfaces-${release.version}-src.tgz"/>
    <property name="bin.release.bundle" location="${release.dir}/myfaces-${release.version}.tgz"/>
    <property name="app.release.bundle" location="${release.dir}/myfaces-${release.version}-app.tgz"/>

    <!-- Temporary dir. May be overridden in build.local.properties -->
    <property name="temp.dir" location="${env.TEMP}"/>

    <property name="api.classes" location="${temp.dir}/myfaces-api/classes"/>
    <property name="share.classes" location="${temp.dir}/myfaces-share/classes"/>
    <property name="wml.classes" location="${temp.dir}/myfaces-wml/classes"/>
    <property name="xdoclet.classes" location="${temp.dir}/myfaces-xdoclet/classes"/>
    <property name="impl.classes" location="${temp.dir}/myfaces-impl/classes"/>
    <property name="components.classes" location="${temp.dir}/myfaces-components/classes"/>


    <property name="resolved-tlds.dir" location="${temp.dir}/myfaces-tlds"/>

    <!-- classpath for compiling api classes -->
    <path id="jsfapi.class.path">
        <pathelement location="${servlet-jsp.jar}"/>
        <pathelement location="${jstl.jar}"/>
    </path>

    <!-- classpath for compiling shared classes -->
    <path id="share.class.path">
        <pathelement location="${servlet-jsp.jar}"/>
        <pathelement location="${jstl.jar}"/>
        <pathelement location="${jsp-2.0.jar}"/>
        <pathelement location="${commons-logging.jar}"/>
        <pathelement location="${commons-el.jar}"/>
        <pathelement location="${api.classes}"/>
    </path>

    <!-- classpath for compiling impl classes -->
    <path id="myfaces.class.path">
        <pathelement location="${servlet-jsp.jar}"/>
        <pathelement location="${jstl.jar}"/>
        <pathelement location="${jsp-2.0.jar}"/>
        <pathelement location="${commons-logging.jar}"/>
        <pathelement location="${commons-el.jar}"/>
        <pathelement location="${commons-codec.jar}"/>
        <pathelement location="${commons-beanutils.jar}"/>
        <pathelement location="${commons-collections.jar}"/>
        <pathelement location="${commons-digester.jar}"/>
        <pathelement location="${portlet.jar}"/>
        <pathelement location="${api.classes}"/>
        <pathelement location="${share.classes}"/>
    </path>

    <!-- classpath for compiling component classes -->
    <path id="components.class.path">
        <pathelement location="${servlet-jsp.jar}"/>
        <pathelement location="${jstl.jar}"/>
        <pathelement location="${jsp-2.0.jar}"/>
        <pathelement location="${commons-logging.jar}"/>
        <pathelement location="${commons-el.jar}"/>
        <pathelement location="${commons-validator.jar}"/>
        <pathelement location="${jakarta-oro.jar}"/>
        <pathelement location="${struts.jar}"/>
        <pathelement location="${commons-beanutils.jar}"/>
        <pathelement location="${commons-fileupload.jar}"/>
        <pathelement location="${commons-digester.jar}"/>
        <pathelement location="${commons-beanutils.jar}"/>
        <pathelement location="${api.classes}"/>
        <pathelement location="${share.classes}"/>
    </path>

    <!-- classpath for compiling wmlRenderKit classes -->
	<path id="wml.classpath.path">
	    <pathelement location="${commons-codec.jar}"/>
	    <pathelement location="${commons-beanutils.jar}"/>
	    <pathelement location="${commons-collections.jar}"/>
	    <pathelement location="${commons-digester.jar}"/>
	    <pathelement location="${commons-logging.jar}"/>
        <pathelement location="${api.classes}"/>
        <pathelement location="${share.classes}"/>
        <pathelement location="${impl.classes}"/>
	    <pathelement location="${jstl.jar}"/>
	    <pathelement location="${build.dir}/WEB-INF/classes/"/>
	    <pathelement location="${jsp-2.0.jar}"/>
	    <pathelement location="${servlet-jsp.jar}"/>
	</path>


    <!-- classpath for javadoc creation -->
    <path id="javadoc.class.path">
        <pathelement location="${servlet-jsp.jar}"/>
        <pathelement location="${jsp-2.0.jar}"/>
        <pathelement location="${jstl.jar}"/>
        <pathelement location="${commons-codec.jar}"/>
        <pathelement location="${commons-logging.jar}"/>
        <pathelement location="${commons-el.jar}"/>
        <pathelement location="${jakarta-oro.jar}"/>
        <pathelement location="${commons-validator.jar}"/>
        <pathelement location="${commons-fileupload.jar}"/>
        <pathelement location="${myfaces.jar}"/>
        <pathelement location="${myfaces-jsf-api.jar}"/>
        <pathelement location="${commons-beanutils.jar}"/>
        <pathelement location="${commons-collections.jar}"/>
        <pathelement location="${commons-digester.jar}"/>
    </path>

	  <path id="xdoclet.classpath">
	    <pathelement location="${xdoclet.jar}"/>
	    <pathelement location="${xjavadoc.jar}"/>
	    <pathelement location="${commons-collections.jar}"/>
	    <pathelement location="${commons-logging.jar}"/>
	  </path>

    <target name="myfaces-jsf-api-jar"
            description="builds the myfaces-jsf-api.jar file"
            depends="-compile-api">
        <!-- timestamp for the manifest -->
        <tstamp>
            <format property="TODAY" pattern="yyyy-MM-dd HH:mm z"/>
        </tstamp>

        <!-- build the jar -->
        <jar destfile="${myfaces-jsf-api.jar}">
            <!-- manifest -->
            <manifest>
                <attribute name="Built-By" value="${user.name}"/>
                <section name="myfaces.apache.org">
                    <attribute name="Implementation-Title" value="${manifest.impl.title}"/>
                    <attribute name="Implementation-Version" value="${manifest.impl.version} (${TODAY})"/>
                    <attribute name="Implementation-Vendor" value="${manifest.impl.vendor}"/>
                </section>
            </manifest>

            <!-- classes -->
            <fileset dir="${api.classes}"
                     includes="**"
                     excludes=".dependency-info/**/*"/>
        </jar>

    </target>

    <target name="myfaces-impl-jar"
            description="builds the myfaces-impl.jar file"
            depends="-compile-share,-compile-impl,-compile-components,myfaces-jsf-api-jar,resolve-tld-entities" >
        <!-- timestamp for the manifest -->
        <tstamp>
            <format property="TODAY" pattern="yyyy-MM-dd HH:mm z"/>
        </tstamp>

        <!-- build the jar -->
        <jar destfile="${myfaces-impl.jar}">
            <!-- manifest -->
            <manifest>
                <attribute name="Built-By" value="${user.name}"/>
                <section name="myfaces.apache.org">
                    <attribute name="Implementation-Title" value="${manifest.impl.title}"/>
                    <attribute name="Implementation-Version" value="${manifest.impl.version} (${TODAY})"/>
                    <attribute name="Implementation-Vendor" value="${manifest.impl.vendor}"/>
                </section>
            </manifest>

            <!-- classes -->
            <fileset dir="${share.classes}"
                     includes="**"
                     excludes=".dependency-info/**/*"/>
            <fileset dir="${impl.classes}"
                     includes="**"
                     excludes=".dependency-info/**/*"/>
            <!-- properties, DTDs, XMLs -->
            <fileset dir="${myfaces.src}"
                     includes="**"
                     excludes="**/*.java
                               **/package.html"/>
            <!-- TLDs -->
            <zipfileset dir="${resolved-tlds.dir}"
                        includes="*.tld"
                        prefix="META-INF/"/>
            <!-- faces-config.xml -->
            <zipfileset dir="${project.dir}/conf"
                        includes="faces-config.xml"
                        prefix="META-INF/"/>
        </jar>

    </target>

    <target name="myfaces-extensions-jar"
            description="builds the myfaces-extensions.jar file"
            depends="-compile-share,
                     -compile-components,
                     resolve-tld-entities" >
        <!-- timestamp for the manifest -->
        <tstamp>
            <format property="TODAY" pattern="yyyy-MM-dd HH:mm z"/>
        </tstamp>

        <!-- build the jar -->
        <jar destfile="${myfaces-extensions.jar}">
            <!-- manifest -->
            <manifest>
                <attribute name="Built-By" value="${user.name}"/>
                <section name="myfaces.apache.org">
                    <attribute name="Implementation-Title" value="${manifest.impl.title.components}"/>
                    <attribute name="Implementation-Version" value="${manifest.impl.version} (${TODAY})"/>
                    <attribute name="Implementation-Vendor" value="${manifest.impl.vendor}"/>
                </section>
            </manifest>

            <!-- classes -->
            <fileset dir="${share.classes}"
                     includes="**"
                     excludes=".dependency-info/**/*"/>
            <fileset dir="${components.classes}"
                     includes="**"
                     excludes=".dependency-info/**/*"/>
            <!-- TLDs -->
            <zipfileset dir="${resolved-tlds.dir}"
                        includes="myfaces_ext.tld,myfaces_ext_sf.tld"
                        prefix="META-INF/"/>
            <!-- faces-config.xml -->
            <zipfileset dir="${project.dir}/conf"
                        includes="faces-config.xml"
                        prefix="META-INF/"/>
            <!-- components_resources -->
        	<fileset dir="${components.src}"
        			includes="**/resource/**"/>

        </jar>

    </target>

    <target name="myfaces-jar"
            description="builds the myfaces.jar file with the complete myfaces libraries"
            depends="-compile-share,-compile-impl,-compile-components,resolve-tld-entities" >
        <!-- timestamp for the manifest -->
        <tstamp>
            <format property="TODAY" pattern="yyyy-MM-dd HH:mm z"/>
        </tstamp>

        <!-- build the jar -->
        <jar destfile="${myfaces.jar}">
            <!-- manifest -->
            <manifest>
                <attribute name="Built-By" value="${user.name}"/>
                <section name="myfaces.apache.org">
                    <attribute name="Implementation-Title" value="${manifest.impl.title}"/>
                    <attribute name="Implementation-Version" value="${manifest.impl.version} (${TODAY})"/>
                    <attribute name="Implementation-Vendor" value="${manifest.impl.vendor}"/>
                </section>
            </manifest>

            <!-- classes -->
            <fileset dir="${api.classes}"
                     includes="**"
                     excludes=".dependency-info/**/*"/>
            <fileset dir="${share.classes}"
                     includes="**"
                     excludes=".dependency-info/**/*"/>
            <fileset dir="${impl.classes}"
                     includes="**"
                     excludes=".dependency-info/**/*"/>
            <fileset dir="${components.classes}"
                     includes="**"
                     excludes=".dependency-info/**/*"/>
            <!-- properties, DTDs, XMLs -->
            <fileset dir="${myfaces.src}"
                     includes="**"
                     excludes="**/*.java
                               **/package.html"/>
            <!-- TLDs -->
            <zipfileset dir="${resolved-tlds.dir}"
                        includes="*.tld"
                        prefix="META-INF/"/>
            <!-- faces-config.xml -->
            <zipfileset dir="${project.dir}/conf"
                        includes="faces-config.xml"
                        prefix="META-INF/"/>
            <!-- components_resources -->
        	<fileset dir="${components.src}"
        			includes="**/resource/**"/>

        </jar>

    </target>


    <target name="javadoc"
            description="creates javadoc for MyFaces classes"
            depends="myfaces-jar" >
        <mkdir dir="${doc.dir}/javadoc"/>
        <javadoc destdir="${doc.dir}/javadoc"
                 packagenames="org.apache.myfaces.*"
                 classpathref="javadoc.class.path"
                 failonerror="true"
        	     Windowtitle="Apache MyFaces API Documentation">
        	<sourcepath>
           		<pathelement location="${myfaces.src}"/>
           		<pathelement location="${share.src}"/>
           		<pathelement location="${components.src}"/>
        		<pathelement location="${wml.src}"/>
               	<pathelement location="${xdoclet.src}"/>
		   	</sourcepath>
        </javadoc>
    </target>

    <target name="tlddoc"
            description="creates tlddoc for the extension tld"
            depends="resolve-tld-entities,codegen" >
        <mkdir dir="${doc.dir}/tlddoc"/>
        <java fork="true" jar="${tlddoc.jar}" failonerror="true">
            <arg line="-doctitle 'Tag library for Apache MyFaces'" />
            <arg line="-d ${doc.dir}/tlddoc"/>
            <arg value="${resolved-tlds.dir}/myfaces_ext.tld"/>
            <arg value="${generated.src}/myfaces_wap.tld"/>
		</java>
    </target>


    <target name="bin-release"
            depends="myfaces-jsf-api-jar, myfaces-impl-jar, myfaces-extensions-jar, myfaces-jar, myfaces-wap-jar, javadoc, tlddoc"
            description="creates the binary release file myfaces-x.x.x.tgz (don't forget to adjust manifest.properties!)">

        <tar destfile="${bin.release.bundle}"
            compression="gzip" >
            <tarfileset dir="${doc.dir}"
                        prefix="myfaces-${manifest.impl.version}/doc"/>
            <tarfileset dir="${conf.dir}"
                        includes="web.xml"
                        prefix="myfaces-${manifest.impl.version}/conf"/>
            <tarfileset file="${commons-codec.jar}"
                        prefix="myfaces-${manifest.impl.version}/lib"/>
            <tarfileset file="${commons-logging.jar}"
                        prefix="myfaces-${manifest.impl.version}/lib"/>
            <tarfileset file="${commons-el.jar}"
                        prefix="myfaces-${manifest.impl.version}/lib"/>
            <tarfileset file="${commons-fileupload.jar}"
                        prefix="myfaces-${manifest.impl.version}/lib"/>
            <tarfileset file="${commons-validator.jar}"
                        prefix="myfaces-${manifest.impl.version}/lib"/>
            <tarfileset file="${jakarta-oro.jar}"
                        prefix="myfaces-${manifest.impl.version}/lib"/>
            <tarfileset file="${jstl.jar}"
                        prefix="myfaces-${manifest.impl.version}/lib"/>
            <tarfileset file="${jsp-2.0.jar}"
                        prefix="myfaces-${manifest.impl.version}/lib"/>
            <tarfileset file="${commons-digester.jar}"
                        prefix="myfaces-${manifest.impl.version}/lib"/>
            <tarfileset file="${commons-beanutils.jar}"
                        prefix="myfaces-${manifest.impl.version}/lib"/>
            <tarfileset file="${commons-collections.jar}"
                        prefix="myfaces-${manifest.impl.version}/lib"/>
            <tarfileset file="${myfaces-jsf-api.jar}"
            			prefix="myfaces-${manifest.impl.version}/lib" />
            <tarfileset file="${myfaces-impl.jar}"
            			prefix="myfaces-${manifest.impl.version}/lib" />
            <tarfileset file="${myfaces-extensions.jar}"
            			prefix="myfaces-${manifest.impl.version}/lib" />
            <tarfileset file="${myfaces.jar}"
              			prefix="myfaces-${manifest.impl.version}/lib" />
            <tarfileset file="${myfaces-wap.jar}"
                  		prefix="myfaces-${manifest.impl.version}/lib" />
            <tarfileset file="${myfaces-xdoclet.jar}"
                  		prefix="myfaces-${manifest.impl.version}/lib" />

            </tar>
    </target>


    <target name="src-release"
            depends="javadoc, tlddoc"
            description="creates the source release file myfaces-x.x.x-src.tgz (don't forget to adjust manifest.properties!)">
        <tar destfile="${src.release.bundle}"
             compression="gzip">
            <tarfileset dir="${build.dir}"
                        includes="**/*"
                        excludes="**/build.local.properties,
                                  codegen/**/*,
                                  develop/**/*"
                        prefix="myfaces-${manifest.impl.version}/build"/>
            <tarfileset dir="${conf.dir}"
                        excludes="develop-web.xml"
                        prefix="myfaces-${manifest.impl.version}/conf"/>
            <tarfileset dir="${doc.dir}"
                        excludes="javadoc/**/*
                                  tlddoc/**/*"
                        prefix="myfaces-${manifest.impl.version}/doc"/>
            <tarfileset dir="${jsfapi.src}"
                        prefix="myfaces-${manifest.impl.version}/src/jsfapi"/>
            <tarfileset dir="${share.src}"
                        prefix="myfaces-${manifest.impl.version}/src/share"/>
            <tarfileset dir="${myfaces.src}"
                        prefix="myfaces-${manifest.impl.version}/src/myfaces"/>
 			<tarfileset dir="${wml.src}"
               			prefix="myfaces-${manifest.impl.version}/src/wml"/>
			<tarfileset dir="${xdoclet.src}"
                        prefix="myfaces-${manifest.impl.version}/src/xdoclet"/>
            <tarfileset dir="${components.src}"
                        prefix="myfaces-${manifest.impl.version}/src/components"/>
            <tarfileset dir="${cactus.src}"
                        prefix="myfaces-${manifest.impl.version}/src/cactus"/>
            <tarfileset dir="${junit.src}"
                        prefix="myfaces-${manifest.impl.version}/src/junit"/>
            <tarfileset dir="${tlds.dir}"
                        prefix="myfaces-${manifest.impl.version}/tlds"/>
            <tarfileset dir="${apps.dir}"
                        prefix="myfaces-${manifest.impl.version}/webapps"/>
        </tar>
    </target>


    <target name="examples-release"
            description="creates the examples release file myfaces-x.x.x-examples.tgz (don't forget to adjust manifest.properties!)">
        <ant dir="${project.dir}/build/examples-webapp"
             antfile="build.xml"
             inheritall="false"
             target="release"/>
    </target>

    <target name="tiles-release"
            description="creates the tiles examples release file myfaces-x.x.x-tiles-example.tgz (don't forget to adjust manifest.properties!)">
        <ant dir="${project.dir}/build/tiles-webapp"
             antfile="build.xml"
             inheritall="false"
             target="release"/>
    </target>

    <target name="blank-release"
            description="creates the tiles examples release file myfaces-x.x.x-tiles-example.tgz (don't forget to adjust manifest.properties!)">
        <ant dir="${project.dir}/build/blank-webapp"
             antfile="build.xml"
             inheritall="false"
             target="release"/>
    </target>

    <target name="wap-release"
            description="creates the wap examples release file myfaces-x.x.x-tiles-example.tgz (don't forget to adjust manifest.properties!)">
        <ant dir="${project.dir}/build/wap-webapp"
             antfile="build.xml"
             inheritall="false"
             target="release"/>
    </target>
    <target name="simple-webapp"
            description="creates the simple examples release file myfaces-x.x.x-tiles-example.tgz (don't forget to adjust manifest.properties!)">
        <ant dir="${project.dir}/build/simple-webapp"
             antfile="build.xml"
             inheritall="false"
             target="release"/>
    </target>
	<target name="all"
            depends="bin-release, src-release, examples-release, tiles-release, blank-release, wap-release, simple-webapp"
            description="builds all release files">
    </target>
	<target name="all-tests"
            depends="myfaces-jar"
            description="run all the automated tests - tomcat 5.0.18 or better needs to be running on port 8080 for this to work">
		<ant dir="${project.dir}/build/junit" antfile="build.xml" inheritall="false"
		     target="junit"/>
		<ant dir="${project.dir}/build/tagunit-webapp" antfile="build.xml" inheritall="false"
		     target="tagunit"/>
		<ant dir="${project.dir}/build/cactus-webapp" antfile="build.xml" inheritall="false"
		     target="cactus"/>
    </target>

    <target name="clean"
        description="deletes all files that were built (including examples and tagunit)">
        <delete quiet="true" failonerror="false" includeEmptyDirs="true">
            <fileset file="${myfaces-jsf-api.jar}" />
            <fileset file="${myfaces-impl.jar}" />
            <fileset file="${myfaces-extensions.jar}" />
            <fileset file="${myfaces.jar}" />
            <fileset file="${myfaces-wap.jar}" />
            <fileset file="${myfaces-xdoclet.jar}" />
            <fileset file="${project.dir}/myfaces-*.tgz" />
            <fileset dir="${doc.dir}/javadoc" />
            <fileset dir="${doc.dir}/tlddoc" />
        	<fileset dir="${wml.classes}"/>
			<fileset dir="${generated.src}"/>
        	<fileset dir="${api.classes}"/>
            <fileset dir="${share.classes}"/>
            <fileset dir="${impl.classes}"/>
            <fileset dir="${components.classes}"/>
            <fileset dir="${resolved-tlds.dir}"/>     <!-- in case of interrupted builds -->
        	<fileset dir="${project.dir}/src"> <!-- Temp files created by the IDE -->
				<include name="**/*.class"/>
        	</fileset>
        </delete>

        <delete dir="${dist.dir}"/>
        <delete dir="${release.dir}"/>

        <!-- clean up application build stuff as well -->
        <ant antfile="build-webapps.xml" inheritall="false" target="clean"/>
    </target>

    <target name="clean-all"
            description="deletes all files that were built (including also all sub buildfiles)"
            depends="clean" >
        <ant dir="${build.dir}/cactus-webapp" antfile="build.xml" inheritall="false" target="clean"/>
        <ant dir="${build.dir}/examples-webapp" antfile="build.xml" inheritall="false" target="clean"/>
        <ant dir="${build.dir}/tiles-webapp" antfile="build.xml" inheritall="false" target="clean"/>
        <ant dir="${build.dir}/junit" antfile="build.xml" inheritall="false" target="clean"/>
        <ant dir="${build.dir}/tagunit-webapp" antfile="build.xml" inheritall="false" target="clean"/>
        <ant dir="${build.dir}/develop" antfile="build.xml" inheritall="false" target="clean"/>
    </target>

    <target name="-compile-api">
        <mkdir dir="${api.classes}"/>
        <javac srcdir="${jsfapi.src}"
               destdir="${api.classes}"
               optimize="${javac.optimize}"
               debug="${javac.debug}"
               classpathref="jsfapi.class.path">
        </javac>
    </target>

    <target name="-compile-share" depends="-compile-api" >
        <mkdir dir="${share.classes}"/>
        <javac srcdir="${share.src}"
               destdir="${share.classes}"
               optimize="${javac.optimize}"
               debug="${javac.debug}"
               classpathref="share.class.path">
        </javac>
    </target>

    <target name="-compile-impl" depends="-compile-api,-compile-share" >
        <mkdir dir="${impl.classes}"/>
        <javac srcdir="${myfaces.src}"
               destdir="${impl.classes}"
               optimize="${javac.optimize}"
               debug="${javac.debug}"
               classpathref="myfaces.class.path">
        </javac>
    </target>

    <target name="-compile-components" depends="-compile-api,-compile-share">
        <mkdir dir="${components.classes}"/>
        <javac srcdir="${components.src}"
               destdir="${components.classes}"
               optimize="${javac.optimize}"
               debug="${javac.debug}"
               classpathref="components.class.path">
        </javac>
        <tstamp>
            <format property="lastModified" pattern="yyyy-MM-dd HH:mm:ss Z"/>
        </tstamp>
    	<copy todir="${components.classes}" filtering="on">
        	<fileset dir="${components.src}" includes="**/*.properties"/>
			<filterset>
				<filter token="lastModified" value="${lastModified}"/>
			</filterset>
		</copy>
    </target>



    <target name="-compile-wml" depends="-compile-impl" >
        <mkdir dir="${wml.classes}"/>
        <javac srcdir="${share.src}"
               destdir="${share.classes}"
               optimize="${javac.optimize}"
               debug="${javac.debug}"
               classpathref="share.class.path">
        </javac>
    </target>


	  <!-- ============================= PREPARE XDOCLET MODULE ======================================-->
	  <target name="prepareXDoclet" description="compile XDoclet classes and create XML module descriptor">
        <mkdir dir="${xdoclet.classes}"/>
	  	<javac srcdir="${xdoclet.src}" destdir="${xdoclet.classes}" includes="**/*.java"
	           classpathref="xdoclet.classpath" />

	    <taskdef name="xdoclet" classname="xdoclet.DocletTask" classpathref="xdoclet.classpath" />
	    <xdoclet destdir="${xdoclet.classes}" verbose="false" >
	        <fileset dir="${xdoclet.src}">
	            <include name="org/apache/myfaces/xdoclet/*.java" />
	        </fileset>

	        <template templateFile="${xdoclet.src}/org/apache/myfaces/xdoclet/resources/xdoclet-xml.xdt"
	                  destinationfile="xdoclet.xml" />
	     </xdoclet>

	     <jar destfile="${myfaces-xdoclet.jar}" compress="true">
            <!-- manifest -->
            <manifest>
                <attribute name="Built-By" value="${user.name}"/>
                <section name="myfaces.apache.org">
                    <attribute name="Implementation-Title" value="${manifest.impl.title}"/>
                    <attribute name="Implementation-Version" value="${manifest.impl.version} (${TODAY})"/>
                    <attribute name="Implementation-Vendor" value="${manifest.impl.vendor}"/>
                </section>
            </manifest>	        <fileset dir="${xdoclet.classes}" >
	            <include name="**/*.*" />
	            <exclude name="**/xdoclet.xml" />
	        </fileset>
	        <fileset dir="${xdoclet.src}" >
	            <include name="**/*.xdt" />
	            <exclude name="**/xdoclet-xml.xdt" />
	        </fileset>
	        <metainf dir="${xdoclet.classes}" includes="xdoclet.xml" />
	     </jar>
	  </target>



	  <!-- ============================= XDOCLET - GENEREATE SOURCE CODE  =====================================-->
	  <target name="codegen" depends="prepareXDoclet" description="generate components and taglibs">
	    <taskdef name="wapfaces" classname="xdoclet.DocletTask" classpathref="xdoclet.classpath" >
	        <classpath>
	            <pathelement path="${myfaces-xdoclet.jar}" />
	        </classpath>
	    </taskdef>

	  	<mkdir dir="${generated.src}" />
	    <wapfaces destdir="${generated.src}" verbose="true"  >
	        <fileset dir="${wml.src}">
	            <include name="org/apache/myfaces/wap/def/*.java" />
	        </fileset>

	        <component destinationFile="{0}.java">
	            <packageSubstitution packages="def" substituteWith="component" />
	        </component>

	        <tag destinationFile="{0}Tag.java">
	            <packageSubstitution packages="def" substituteWith="taglib" />
	        </tag>

	        <taglib destinationFile="myfaces_wap.tld" />
	        <facesconfig destinationFile="faces-config.xml" />
	     </wapfaces>

	     <xmlvalidate warn="false" file="${generated.src}/myfaces_wap.tld">
	        <dtd publicId="-//Sun Microsystems, Inc.//DTD JSP Tag Library 1.2//EN"
	             location="res/dtds/web-jsptaglibrary_1_2.dtd" />
	     </xmlvalidate>
	     <xmlvalidate warn="false" file="${generated.src}/faces-config.xml">
	        <dtd publicId="-//Sun Microsystems, Inc.//DTD JavaServer Faces Config 1.1//EN"
	             location="res/dtds/web-facesconfig_1_1.dtd" />
	     </xmlvalidate>
	  </target>

	  <!-- ============================= BUILD TAG LIBRARY ===========================================-->
	  <target name="myfaces-wap-jar" depends="codegen"
	     description="Compile Java files, copy static files and create jar archive." >

	  	<mkdir dir="${wml.classes}"/>
	    <javac srcdir="${wml.src}" destdir="${wml.classes}" classpathref="wml.classpath.path">
	    	<include name="org/apache/myfaces/wap/base/**/*.java" />
	        <classpath>
	            <pathelement location="${wml.classes}"/>
	        </classpath>
	    </javac>


	    <javac srcdir="${generated.src}" destdir="${wml.classes}">
	    	<include name="**/*.java" />
	        <classpath refid="wml.classpath.path"/>
	    </javac>

	    <javac srcdir="${wml.src}" destdir="${wml.classes}" classpathref="wml.classpath.path">
	    	<include name="**/*.java" />
	        <exclude name="org/apache/myfaces/wap/base/**/*.java" />
	        <exclude name="org/apache/myfaces/wap/def/**/*.java" />
	        <classpath>
	            <pathelement location="${wml.classes}"/>
	        </classpath>
	    </javac>

	    <copy todir="${wml.classes}/META-INF">
	      <fileset dir="${generated.src}">
	            <include name="*.tld" />
	            <include name="faces-config.xml" />
	      </fileset>
	    </copy>

	    <jar jarfile="${myfaces-wap.jar}"  basedir="${wml.classes}">
            <!-- manifest -->
            <manifest>
                <attribute name="Built-By" value="${user.name}"/>
                <section name="myfaces.apache.org">
                    <attribute name="Implementation-Title" value="${manifest.impl.title}"/>
                    <attribute name="Implementation-Version" value="${manifest.impl.version} (${TODAY})"/>
                    <attribute name="Implementation-Vendor" value="${manifest.impl.vendor}"/>
                </section>
            </manifest>
          </jar>
	  </target>


    <target name="resolve-tld-entities">
        <mkdir dir="${resolved-tlds.dir}"/>
        <!-- resolve TLD entities (for containers that do not support entities within TLDs) -->
        <xslt basedir="${tlds.dir}"
              includes="*.tld"
              destdir="${resolved-tlds.dir}"
              style="${tlds.dir}/resolve_entities.xsl"
              extension=".tld">
            <xmlcatalog>
                <dtd publicId="-//Sun Microsystems, Inc.//DTD JSP Tag Library 1.2//EN"
                     location="${tlds.dir}/web-jsptaglibrary_1_2.dtd"/>
            </xmlcatalog>
        </xslt>
    </target>

    <target name="app-dist" depends="myfaces-jar">

        <!-- build simple webapps -->
        <copy file="${conf.dir}/web.xml" todir="${apps.dir}/simple/WEB-INF"/>
        <ant antfile="build-webapps.xml" inheritall="false" target="war">
            <property name="webapp.name" value="myfaces-simple-examples"/>
            <property name="myfaces.jar" location="${myfaces.jar}"/>
            <property name="web.dir" location="${apps.dir}/simple"/>
            <property name="webapp.dist.dir" location="${webapp.dist.dir}"/>
        </ant>
        <!-- build example webapps -->
        <copy file="${conf.dir}/web.xml" todir="${apps.dir}/examples/WEB-INF"/>
        <ant antfile="build-webapps.xml" inheritall="false" target="war">
            <property name="webapp.name" value="myfaces-examples"/>
            <property name="myfaces.jar" location="${myfaces.jar}"/>
            <property name="web.dir" location="${apps.dir}/examples"/>
            <property name="webapp.dist.dir" location="${webapp.dist.dir}"/>
        </ant>

    </target>

    <target name="prepare">
        <mkdir dir="${release.dir}"/>
    </target>

    <target name="app-release" depends="prepare, app-dist">

        <tar destfile="${app.release.bundle}" compression="gzip" >
            <tarfileset dir="${webapp.dist.dir}"/>
        </tar>

    </target>

    <target name="release" depends="prepare, src-release, bin-release, app-release">

        <!-- copy resulting builds to nightly directory -->
        <copy  file="${src.release.bundle}" todir="${release.dir}"/>
        <copy file="${bin.release.bundle}" todir="${release.dir}"/>
        <copy file="${app.release.bundle}" todir="${release.dir}"/>

    </target>

</project>
