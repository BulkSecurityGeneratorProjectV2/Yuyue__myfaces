<?xml version="1.0" encoding="iso-8859-1"?>
<project name="myfaces-release" default="all" >

    <property environment="env"/>

    <!-- Constants -->
    <property name="project.dir" location="${basedir}/.."/>
    <property name="jsfapi.src" location="${project.dir}/src/jsfapi"/>
    <property name="share.src" location="${project.dir}/src/share"/>
    <property name="myfaces.src" location="${project.dir}/src/myfaces"/>
    <property name="components.src" location="${project.dir}/src/components"/>
    <property name="cactus.src" location="${project.dir}/src/cactus"/>
    <property name="junit.src" location="${project.dir}/src/junit"/>
    <property name="tlds.dir" location="${project.dir}/tlds"/>
    <property name="doc.dir" location="${project.dir}/doc"/>
    <property name="build.dir" location="${project.dir}/build"/>
    <property name="conf.dir" location="${project.dir}/conf"/>


    <!-- Properties -->
    <property file="build.local.properties"/>
    <property file="build.default.properties"/>
    <property file="manifest.properties"/>
    
    <!-- Temporary dir. May be overridden in build.local.properties -->
    <property name="temp.dir" location="${env.TEMP}"/>

    <property name="api.classes" location="${temp.dir}/myfaces-api/classes"/>
    <property name="share.classes" location="${temp.dir}/myfaces-share/classes"/>
    <property name="impl.classes" location="${temp.dir}/myfaces-impl/classes"/>
    <property name="components.classes" location="${temp.dir}/myfaces-components/classes"/>

    <property name="resolved-tlds.dir" location="${temp.dir}/myfaces-tlds"/>

    <!-- classpath for compiling api classes -->
    <path id="jsfapi.class.path">
        <pathelement location="${servlet.jar}"/>
        <pathelement location="${jsp-api.jar}"/>
        <pathelement location="${jstl.jar}"/>
    </path>

    <!-- classpath for compiling shared classes -->
    <path id="share.class.path">
        <pathelement location="${api.classes}"/>
        <pathelement location="${servlet.jar}"/>
        <pathelement location="${jsp-api.jar}"/>
        <pathelement location="${jstl.jar}"/>
        <pathelement location="${commons-logging.jar}"/>
        <pathelement location="${commons-el.jar}"/>
    </path>

    <!-- classpath for compiling impl classes -->
    <path id="myfaces.class.path">
        <pathelement location="${api.classes}"/>
        <pathelement location="${share.classes}"/>
        <pathelement location="${share.src}"/>
        <pathelement location="${servlet.jar}"/>
        <pathelement location="${jsp-api.jar}"/>
        <pathelement location="${jstl.jar}"/>
        <pathelement location="${commons-logging.jar}"/>
        <pathelement location="${commons-el.jar}"/>
        <pathelement location="${commons-codec.jar}"/>
    </path>

    <!-- classpath for compiling component classes -->
    <path id="components.class.path">
        <pathelement location="${api.classes}"/>
        <pathelement location="${share.classes}"/>
        <pathelement location="${servlet.jar}"/>
        <pathelement location="${jsp-api.jar}"/>
        <pathelement location="${jstl.jar}"/>
        <pathelement location="${commons-logging.jar}"/>
        <pathelement location="${commons-el.jar}"/>
        <pathelement location="${commons-fileupload.jar}"/>
        <pathelement location="${cos.jar}"/>
    </path>

    <!-- classpath for javadoc creation -->
    <path id="javadoc.class.path">
        <pathelement location="${servlet.jar}"/>
        <pathelement location="${jsp-api.jar}"/>
        <pathelement location="${jstl.jar}"/>
        <pathelement location="${commons-codec.jar}"/>
        <pathelement location="${commons-logging.jar}"/>
        <pathelement location="${commons-el.jar}"/>
        <pathelement location="${commons-fileupload.jar}"/>
        <pathelement location="${myfaces.jar}"/>
    </path>

    <target name="myfaces-jar"
            description="builds the myfaces.jar file"
            depends="-compile-api,
                     -compile-share,
                     -compile-impl,
                     -compile-components,
                     resolve-tld-entities" >
        <!-- timestamp for the manifest -->
        <tstamp>
            <format property="TODAY_DE" pattern="dd.MM.yyyy HH:mm" locale="de"/>
        </tstamp>

        <!-- build the jar -->
        <jar destfile="${myfaces.jar}">
            <!-- manifest -->
            <manifest>
                <attribute name="Built-By" value="${user.name}"/>
                <section name="myfaces.sourceforge.net">
                    <attribute name="Implementation-Title" value="${manifest.impl.title}"/>
                    <attribute name="Implementation-Version" value="${manifest.impl.version} ${TODAY_DE}"/>
                    <attribute name="Implementation-Vendor" value="${manifest.impl.vendor}"/>
                </section>
            </manifest>

            <!-- classes -->
            <fileset dir="${api.classes}"
                     includes="**"
                     excludes=".dependency-info/**/*"/>
            <fileset dir="${share.classes}"
                     includes="**"
                     excludes=".dependency-info/**/*"/>
            <fileset dir="${impl.classes}"
                     includes="**"
                     excludes=".dependency-info/**/*"/>
            <fileset dir="${components.classes}"
                     includes="**"
                     excludes=".dependency-info/**/*"/>
            <!-- properties, DTDs, XMLs -->
            <fileset dir="${myfaces.src}"
                     includes="**"
                     excludes="**/*.java
                               **/package.html"/>
            <!-- TLDs -->
            <zipfileset dir="${resolved-tlds.dir}"
                        includes="*.tld"
                        prefix="META-INF/"/>
            <!-- faces-config.xml -->
            <zipfileset dir="${project.dir}/conf"
                        includes="faces-config.xml"
                        prefix="META-INF/"/>
            <zipfileset dir="${project.dir}/conf"
                        includes="message_resources_*.xml"
                        prefix="META-INF/"/>
        </jar>

    </target>

    <target name="myfaces-components-jar"
            description="builds the myfaces-components.jar file"
            depends="-compile-share,
                     -compile-impl,
                     -compile-components,
                     resolve-tld-entities" >
        <!-- timestamp for the manifest -->
        <tstamp>
            <format property="TODAY_DE" pattern="dd.MM.yyyy HH:mm" locale="de"/>
        </tstamp>

        <!-- build the jar -->
        <jar destfile="${myfaces-components.jar}">
            <!-- manifest -->
            <manifest>
                <attribute name="Built-By" value="${user.name}"/>
                <section name="myfaces.sourceforge.net">
                    <attribute name="Implementation-Title" value="${manifest.impl.title}"/>
                    <attribute name="Implementation-Version" value="${manifest.impl.version} ${TODAY_DE}"/>
                    <attribute name="Implementation-Vendor" value="${manifest.impl.vendor}"/>
                </section>
            </manifest>

            <!-- classes -->
            <fileset dir="${share.classes}"
                     includes="**"
                     excludes=".dependency-info/**/*"/>
            <fileset dir="${components.classes}"
                     includes="**"
                     excludes=".dependency-info/**/*"/>
            <fileset dir="${impl.classes}"
                     includes="**/net/sourceforge/myfaces/renderkit/html/**"
                     excludes=".dependency-info/**/*"/>
            <!-- properties, DTDs, XMLs -->
            <fileset dir="${myfaces.src}"
                     includes="**"
                     excludes="**/*.java,
                               **/javax/faces/**/*,
                               **/web-facesconfig_1_0.dtd,
                               **/standard-faces-config.xml,
                               **/package.html"/>
            <!-- TLDs -->
            <zipfileset dir="${resolved-tlds.dir}"
                        includes="*.tld"
                        excludes="**/myfaces_core.tld,
                                  **/myfaces_html.tld"
                        prefix="META-INF/"/>
            <!-- faces-config.xml -->
            <zipfileset dir="${project.dir}/conf"
                        includes="faces-config.xml"
                        prefix="META-INF/"/>
            <zipfileset dir="${project.dir}/conf"
                        includes="message_resources_*.xml"
                        prefix="META-INF/"/>
        </jar>

    </target>


    <target name="javadoc"
            description="creates javadoc for MyFaces classes"
            depends="myfaces-jar" >
        <mkdir dir="${doc.dir}/javadoc"/>
        <javadoc sourcepath="${myfaces.src}"
                 destdir="${doc.dir}/javadoc"
                 packagenames="net.sourceforge.myfaces.*"
                 classpathref="javadoc.class.path"
                 failonerror="true"/>
    </target>

    <target name="tlddoc"
            description="creates tlddoc for the extension tld"
            depends="resolve-tld-entities" >
        <mkdir dir="${doc.dir}/tlddoc"/>
        <java fork="true" jar="${tlddoc.jar}" failonerror="true">
            <arg line="-d ${doc.dir}/tlddoc"/>
            <arg value="${resolved-tlds.dir}/myfaces_ext.tld"/>
        </java>
    </target>


    <target name="bin-release"
            depends="myfaces-jar, myfaces-components-jar, javadoc, tlddoc"
            description="creates the binary release file myfaces-x.x.x.tgz (don't forget to adjust manifest.properties!)">

        <tar destfile="${project.dir}/myfaces-${manifest.impl.version}.tgz"
            compression="gzip" >
            <tarfileset dir="${doc.dir}"
                        prefix="myfaces-${manifest.impl.version}/doc"/>
            <tarfileset dir="${conf.dir}"
                        includes="web.xml"
                        prefix="myfaces-${manifest.impl.version}/conf"/>
            <tarfileset file="${myfaces.jar}"
                        prefix="myfaces-${manifest.impl.version}/lib"/>
            <tarfileset file="${commons-codec.jar}"
                        prefix="myfaces-${manifest.impl.version}/lib"/>
            <tarfileset file="${commons-logging.jar}"
                        prefix="myfaces-${manifest.impl.version}/lib"/>
            <tarfileset file="${commons-el.jar}"
                        prefix="myfaces-${manifest.impl.version}/lib"/>
            <tarfileset file="${commons-fileupload.jar}"
                        prefix="myfaces-${manifest.impl.version}/lib"/>
            <tarfileset file="${jstl.jar}"
                        prefix="myfaces-${manifest.impl.version}/lib"/>
            <tarfileset file="${jsp-api.jar}"
                        prefix="myfaces-${manifest.impl.version}/lib"/>
        </tar>
    </target>


    <target name="src-release"
            depends="javadoc, tlddoc"
            description="creates the source release file myfaces-x.x.x-src.tgz (don't forget to adjust manifest.properties!)">
        <tar destfile="${project.dir}/myfaces-${manifest.impl.version}-src.tgz"
             compression="gzip">
            <tarfileset dir="${build.dir}"
                        includes="**/*"
                        excludes="**/build.local.properties,
                                  codegen/**/*,
                                  develop/**/*"
                        prefix="myfaces-${manifest.impl.version}/build"/>
            <tarfileset dir="${conf.dir}"
                        excludes="develop-web.xml"
                        prefix="myfaces-${manifest.impl.version}/conf"/>
            <tarfileset dir="${doc.dir}"
                        excludes="javadoc/**/*
                                  tlddoc/**/*"
                        prefix="myfaces-${manifest.impl.version}/doc"/>
            <tarfileset dir="${jsfapi.src}"
                        prefix="myfaces-${manifest.impl.version}/src/jsfapi"/>
            <tarfileset dir="${share.src}"
                        prefix="myfaces-${manifest.impl.version}/src/share"/>
            <tarfileset dir="${myfaces.src}"
                        prefix="myfaces-${manifest.impl.version}/src/myfaces"/>
            <tarfileset dir="${components.src}"
                        prefix="myfaces-${manifest.impl.version}/src/components"/>
            <tarfileset dir="${cactus.src}"
                        prefix="myfaces-${manifest.impl.version}/src/cactus"/>
            <tarfileset dir="${junit.src}"
                        prefix="myfaces-${manifest.impl.version}/src/junit"/>
            <tarfileset dir="${tlds.dir}"
                        prefix="myfaces-${manifest.impl.version}/tlds"/>
        </tar>
    </target>


    <target name="examples-release"
            description="creates the examples release file myfaces-x.x.x-examples.tgz (don't forget to adjust manifest.properties!)">
        <ant dir="${project.dir}/build/examples-webapp"
             antfile="build.xml"
             inheritall="false"
             target="release"/>
    </target>


    <target name="all"
            depends="bin-release, src-release, examples-release"
            description="builds all release files">
    </target>

	<target name="all-tests"
            depends="myfaces-jar"
            description="run all the automated tests - tomcat 5.0.18 or better needs to be running on port 8080 for this to work">
		<ant dir="${project.dir}/build/junit" antfile="build.xml" inheritall="false"
		     target="junit"/>
		<ant dir="${project.dir}/build/tagunit-webapp" antfile="build.xml" inheritall="false"
		     target="tagunit"/>
		<ant dir="${project.dir}/build/cactus-webapp" antfile="build.xml" inheritall="false"
		     target="cactus"/>
    </target>

    <target name="clean"
        description="deletes all files that were built (including examples and tagunit)">
        <delete quiet="true" failonerror="false" includeEmptyDirs="true">
            <fileset file="${myfaces.jar}" />
            <fileset file="${project.dir}/myfaces-*.tgz" />
            <fileset dir="${doc.dir}/javadoc" />
            <fileset dir="${doc.dir}/tlddoc" />
            <fileset dir="${api.classes}"/>
            <fileset dir="${share.classes}"/>
            <fileset dir="${impl.classes}"/>
            <fileset dir="${components.classes}"/>
            <fileset dir="${resolved-tlds.dir}"/>     <!-- in case of interrupted builds -->
        </delete>
    </target>

    <target name="clean-all"
            description="deletes all files that were built (including also all sub buildfiles)"
            depends="clean" >
        <ant dir="${build.dir}/cactus-webapp" antfile="build.xml" inheritall="false" target="clean"/>
        <ant dir="${build.dir}/examples-webapp" antfile="build.xml" inheritall="false" target="clean"/>
        <ant dir="${build.dir}/junit" antfile="build.xml" inheritall="false" target="clean"/>
        <ant dir="${build.dir}/tagunit-webapp" antfile="build.xml" inheritall="false" target="clean"/>
    </target>

    <target name="-compile-api">
        <mkdir dir="${api.classes}"/>
        <javac srcdir="${jsfapi.src}"
               destdir="${api.classes}"
               optimize="${javac.optimize}"
               debug="${javac.debug}"
               classpathref="jsfapi.class.path">
        </javac>
    </target>

    <target name="-compile-share" depends="-compile-api" >
        <mkdir dir="${share.classes}"/>
        <javac srcdir="${share.src}"
               destdir="${share.classes}"
               optimize="${javac.optimize}"
               debug="${javac.debug}"
               classpathref="share.class.path">
        </javac>
    </target>

    <target name="-compile-impl" depends="-compile-api,-compile-share" >
        <mkdir dir="${impl.classes}"/>
        <javac srcdir="${myfaces.src}"
               destdir="${impl.classes}"
               optimize="${javac.optimize}"
               debug="${javac.debug}"
               classpathref="myfaces.class.path">
        </javac>
    </target>

    <target name="-compile-components" depends="-compile-api,-compile-share">
        <mkdir dir="${components.classes}"/>
        <javac srcdir="${components.src}"
               destdir="${components.classes}"
               optimize="${javac.optimize}"
               debug="${javac.debug}"
               classpathref="components.class.path">
        </javac>
    </target>


    <target name="resolve-tld-entities">
        <mkdir dir="${resolved-tlds.dir}"/>
        <!-- resolve TLD entities (for containers that do not support entities within TLDs) -->
        <xslt basedir="${tlds.dir}"
              includes="*.tld"
              destdir="${resolved-tlds.dir}"
              style="${tlds.dir}/resolve_entities.xsl"
              extension=".tld">
            <xmlcatalog>
                <dtd publicId="-//Sun Microsystems, Inc.//DTD JSP Tag Library 1.2//EN"
                     location="${tlds.dir}/web-jsptaglibrary_1_2.dtd"/>
            </xmlcatalog>
        </xslt>
    </target>

</project>
