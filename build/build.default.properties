# These are the default build properties that normally need not be changed

# Don't forget to use double-backslashes in windows paths!

# File path to Java Servlet API 2.3 and JSP 1.2 archive
servlet-jsp.jar = ${project.dir}/lib/servlet-2.3-jsp-1.2.jar

# File path to JSP 2.0 API archive
jsp-2.0.jar = ${project.dir}/lib/jsp-2.0.jar

# File path to JSTL archive
jstl.jar = ${project.dir}/lib/jstl.jar

# tlddoc library (needed for tlddoc creation)
tlddoc.jar = ${project.dir}/lib/tlddoc.jar

# File path to commons codec package
commons-codec.jar = ${project.dir}/lib/commons-codec-1.2.jar

# File path to commons logging package
commons-logging.jar = ${project.dir}/lib/commons-logging.jar

# File path to commons beanutils package
commons-beanutils.jar = ${project.dir}/lib/commons-beanutils-1.6.1.jar

# File path to commons collections package
commons-collections.jar = ${project.dir}/lib/commons-collections-3.0.jar

# File path to commons digester package
commons-digester.jar = ${project.dir}/lib/commons-digester-1.5.jar

# File path to commons el package
commons-el.jar = ${project.dir}/lib/commons-el.jar

# File path to commons file upload package
commons-fileupload.jar = ${project.dir}/lib/optional/commons-fileupload-1.0.jar

# File path to Jakarta ORO
jakarta-oro.jar = ${project.dir}/lib/optional/jakarta-oro.jar

# File path to commons validator package
commons-validator.jar = ${project.dir}/lib/optional/commons-validator.jar

# File path to struts file for tile support
struts.jar = ${project.dir}/lib/optional/struts.jar

# File path to xdoclet 
xdoclet.jar = ${project.dir}/lib/xdoclet-1.2.1.jar

# File path to xjavadoc
xjavadoc.jar = ${project.dir}/lib/xjavadoc-1.0.3.jar

#File path to myfaces-xdoclet
myfaces-xdoclet.jar = ${project.dir}/lib/myfaces-xdoclet.jar

# Destination file path of MyFaces JSF-API implementation archive to be created
myfaces-jsf-api.jar = ${project.dir}/lib/myfaces-jsf-api.jar

# Destination file path of MyFaces implementation archive to be created
myfaces-impl.jar = ${project.dir}/lib/myfaces-impl.jar

# Destination file path of MyFaces extensions archive to be created
myfaces-extensions.jar = ${project.dir}/lib/myfaces-extensions.jar

# Destination file path of MyFaces WML RenderKIt
myfaces-wap.jar = ${project.dir}/lib/myfaces-wap.jar

# Destination file path of MyFaces complete archive to be created
myfaces.jar = ${project.dir}/lib/myfaces.jar

# Compiler optimize and debug flags
javac.optimize = off
javac.debug = on

# log4j library (only needed for examples application)
log4j.jar = ${project.dir}/lib/optional/log4j-1.2.8.jar

# junit library (only needed for JUnit testing)
junit.jar = ${project.dir}/lib/cactus-1.5/junit-3.8.1.jar

# Destination for JUnit test results
test.results.dir=${project.dir}/test-results

# Cactus libraries dir
cactus.lib.dir=${project.dir}/lib/cactus-1.5

# Tagunit libraries dir
tagunit.lib.dir=${project.dir}/lib/tagunit-1.0.1

# print summary when executing tests
test.printsummary=false

# Tomcat Build and Deploy Support
tomcat.build.dir=${project.dir}/build/tomcat

# Properties for Tomcat Server
# Tomcat home and manager user and password must be set in build.properties (see build.properties.sample)
tomcat.home=${env.CATALINA_HOME}
tomcat.server=localhost
tomcat.port=8080
tomcat.manager.url=http://${tomcat.server}:${tomcat.port}/manager
tomcat.manager.username=admin
tomcat.manager.password=admin
# Define the following tomcat.remote.deploy to deploy on a server that isn't local
# tomcat.remote.deploy=true

# temp dir
env.TEMP=${project.dir}/build/temp