<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE project [
    <!ENTITY tomcat-build SYSTEM "file:../tomcat/tomcat-build.xmlf">
]>
<project name="myfaces-cactus-tests" default="compile">

    <property environment="env"/>
	
    <!-- Constants -->
    <property name="project.dir" location="${basedir}/../.."/>
    <property name="cactus.dir" location="${project.dir}/src/cactus"/>
    <property name="cactus.src" location="${cactus.dir}"/>
	<property name="cactus.web" location="${cactus.dir}/web"/>
	<property name="webapp.name" value="myfaces-cactus-tests"/>
	<property name="tests.jar" value="test-classes.jar"/>

    <!-- Properties -->
    <property file="build.properties"/>
    <property file="../build.properties"/>
	<property file="manifest.properties"/>

    <!-- Temporary dir. May be overridden in build.properties -->
    <property name="temp.dir" value="${env.TEMP}"/>
    <property name="test.results.dir" value="${temp.dir}/test-results"/>

    <!-- cactus classpath for compiling -->
    <path id="cactus.class.path">
        <pathelement location="${servlet.jar}"/>
        <pathelement location="${jsp-api.jar}"/>
        <pathelement location="${jstl.jar}"/>
        <pathelement location="${myfaces.jar}"/>
        <pathelement location="${commons-logging.jar}"/>
    	    <fileset dir="${cactus.lib.dir}">
    	    	    <include name="*.jar"/>
    	    </fileset>
    </path>


    <target name="-myfaces-jar" unless="myfaces.jar.available">
        <!-- creates myfaces.jar via main buildfile if it does not exist -->
        <ant dir="${project.dir}/build"
             antfile="build.xml"
             target="myfaces-jar"
             inheritall="false"/>
    </target>

    <target name="-check-myfaces-jar">
        <!-- check if myfaces.jar exist -->
        <available file="${myfaces.jar}" property="myfaces.jar.available"/>
        <antcall target="-myfaces-jar"/>
    </target>


    <target name="compile"
            depends="-check-myfaces-jar"
            description="compiles the examples java classes to WEB-INF/classes and copies all needed libs to WEB-INF/lib">
        <mkdir dir="${temp.dir}/classes"/>
        <javac srcdir="${cactus.src}"
               destdir="${temp.dir}/classes"
               optimize="${javac.optimize}"
               debug="${javac.debug}"
               classpathref="cactus.class.path">
        </javac>
    	    <jar basedir="${temp.dir}/classes" destfile="${temp.dir}/${tests.jar}"/>
    </target>

    <target name="war"
            depends="compile"
            description="creates the test war file">

        <mkdir dir="${temp.dir}"/>

        <tstamp>
            <format property="TODAY" pattern="yyyy-MM-dd HH:mm" locale="en"/>
        </tstamp>

        <!-- create manifest -->
        <manifest file="${temp.dir}/MANIFEST.MF">
            <section name="${manifest.section}">
                <attribute name="Implementation-Title" value="${manifest.impl.title}"/>
                <attribute name="Implementation-Version" value="${manifest.impl.version} (${TODAY})"/>
                <attribute name="Implementation-Vendor" value="${manifest.impl.vendor}"/>
            </section>
        </manifest>

        <war destfile="${temp.dir}/${webapp.name}.war"
             webxml="${project.dir}/build/cactus-webapp/web.xml"
             manifest="${temp.dir}/MANIFEST.MF">
            <lib file="${temp.dir}/${tests.jar}"/>
            <lib file="${commons-el.jar}"/>
        	    <lib file="${commons-logging.jar}"/>
            <lib file="${cos.jar}"/>
            <lib file="${jsp-api.jar}"/>
            <lib file="${jstl.jar}"/>
            <lib file="${myfaces.jar}"/>
            <lib file="${log4j.jar}"/>
    	        <lib dir="${cactus.lib.dir}">
    	    	        <include name="*.jar"/>
    	    	        <exclude name="cactus-ant-1.5.jar"/>
    	        </lib>
            <fileset dir="${cactus.web}"
                     excludes="WEB-INF/**" />
        </war>
    	</target>

    <target name="run-cactus-tests" description="run the cactus tests">
        <mkdir dir="${test.results.dir}/test-reports/xml"/>
        <mkdir dir="${test.results.dir}/test-reports/html"/>
        <junit fork="true">
            <classpath refid="cactus.class.path"/>
        	    <classpath>
        	    	  <pathelement path="${basedir}"/>
        	    	  <pathelement path="${temp.dir}/classes"/>
          	</classpath>
            <batchtest toDir="${test.results.dir}/test-reports/xml">
                <fileset dir="${temp.dir}/classes">
                    <include name="**/*CactusTest.class"/>
                	</fileset>
            </batchtest>
            <formatter type="xml"/>
        </junit>
	    <junitreport>
	        <fileset dir="${test.results.dir}/test-reports/xml">
		        <include name="TEST-*.xml"/>
		    </fileset>
		    <report toDir="${test.results.dir}/test-reports/html"/>
	    </junitreport>
    </target>

	<target name="clean"
            description="deletes all files that were built">
        <delete quiet="true" failonerror="false" includeEmptyDirs="true">
            <fileset file="${temp.dir}"/>
        </delete>
    </target>

    &tomcat-build;	

</project>
