<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE project [
    <!ENTITY tomcat-build SYSTEM "file:../tomcat/tomcat-build.xmlf">
]>
<project name="myfaces-cactus-tests" default="cactus">

    <property environment="env"/>
	
    <!-- Constants -->
    <property name="project.dir" location="${basedir}/../.."/>
    <property name="cactus.dir" location="${project.dir}/src/cactus"/>
    <property name="cactus.src.dir" location="${cactus.dir}"/>
	<property name="cactus.web.dir" location="${cactus.dir}/web"/>
	<property name="cactus.build.dir" location="${project.dir}/build/cactus-webapp"/>

    <!-- Properties -->
    <property file="../build.local.properties"/>
    <property file="../build.default.properties"/>

    <!-- Temporary dir. May be overridden in build.properties -->
    <property name="temp.dir" location="${env.TEMP}"/>

    <!-- Output dirs and files -->
    <property name="cactus.classes.dir" location="${temp.dir}/cactus"/>
    <property name="cactus.results.dir" location="${test.results.dir}/cactus"/>
    <property name="tests.war" location="${temp.dir}/myfaces-cactus-tests.war"/>

    <!-- Tomcat -->
    <property name="tomcat.war.file" location="${tests.war}"/>
    <property name="tomcat.context.path" value="/myfaces-cactus-tests"/>

    <!-- cactus classpath for compiling -->
    <path id="cactus.class.path">
        <pathelement location="${servlet-jsp.jar}"/>
        <pathelement location="${jsp-2.0.jar}"/>
        <pathelement location="${jstl.jar}"/>
        <pathelement location="${myfaces.jar}"/>
        <pathelement location="${myfaces-jsf-api.jar}"/>        
        <pathelement location="${commons-logging.jar}"/>
        <fileset dir="${cactus.lib.dir}">
            <include name="*.jar"/>
        </fileset>
    </path>


    <target name="cactus" depends="war">
        <antcall target="tomcat-deploy-app"/>
        <antcall target="tomcat-cactus-tests"/>
        <antcall target="tomcat-undeploy-app"/>
    </target>

	<target name="clean"
            description="deletes all files that were built and tries to undeploy webapp">
		<delete dir="${cactus.results.dir}"/>
		<delete dir="${cactus.classes.dir}"/>
		<delete file="${tests.war}"/>
		<delete file="${project.dir}/build/cactus-webapp/TESTS-TestSuites.xml"/>
    </target>


    <target name="-compile"
            depends="-myfaces-jar,-myfaces-jsf-api-jar"
            description="compiles the examples java classes to WEB-INF/classes and copies all needed libs to WEB-INF/lib">
        <mkdir dir="${cactus.classes.dir}"/>
        <javac srcdir="${cactus.src.dir}"
               destdir="${cactus.classes.dir}"
               optimize="${javac.optimize}"
               debug="${javac.debug}"
               classpathref="cactus.class.path">
        </javac>
        <copy todir="${cactus.classes.dir}">
            <fileset dir="${cactus.src.dir}"
                     includes="**/*.properties" />
            <fileset dir="${cactus.src.dir}"
                     includes="**/*.xml" />
        </copy>
        <copy file="${cactus.build.dir}/cactus.properties"
              toFile="${cactus.classes.dir}/cactus.properties"
              overwrite="true" >
          <filterset>
            <filter token="contextURL"
                    value="http://${tomcat.server}:${tomcat.port}/${tomcat.context.path}"/>
          </filterset>
        </copy>
    </target>

    <target name="war" depends="-compile"
            description="creates the test war file">
        <tstamp>
            <format property="TODAY" pattern="yyyy-MM-dd HH:mm" locale="en"/>
        </tstamp>
        <war destfile="${tests.war}"
             webxml="${cactus.web.dir}/WEB-INF/web.xml">
            <manifest>
                <section name="myfaces.sourceforge.net">
                    <attribute name="Implementation-Title" value="MyFaces - Cactus Tests"/>
                    <attribute name="Implementation-Version" value="${TODAY}"/>
                    <attribute name="Implementation-Vendor" value="MyFaces Project Team"/>
                </section>
            </manifest>
            <classes dir="${cactus.classes.dir}"/>
            <lib file="${commons-el.jar}"/>
        	<lib file="${commons-logging.jar}"/>
            <lib file="${commons-codec.jar}"/>
            <lib file="${commons-fileupload.jar}"/>
            <lib file="${commons-beanutils.jar}"/>
            <lib file="${commons-collections.jar}"/>
            <lib file="${commons-digester.jar}"/>
        	<lib file="${cos.jar}"/>
            <lib file="${jstl.jar}"/>
            <lib file="${myfaces.jar}"/>
            <lib file="${myfaces-jsf-api.jar}"/>
            <lib file="${log4j.jar}"/>
            <lib dir="${cactus.lib.dir}">
                <include name="*.jar"/>
                <exclude name="cactus-ant-1.5.jar"/>
                <exclude name="commons-logging-1.0.3.jar"/>
            </lib>
            <fileset dir="${cactus.web.dir}"
                     excludes="**/WEB-INF/web.xml, **/cactus.properties" />
        </war>
    </target>

	<target name="tomcat-cactus-tests"
            description="run the cactus tests">
        <mkdir dir="${cactus.results.dir}/test-reports/xml"/>
        <mkdir dir="${cactus.results.dir}/test-reports/html"/>
        <junit fork="true" printsummary="${test.printsummary}">
            <classpath refid="cactus.class.path"/>
      	    <classpath>
              <pathelement path="${cactus.classes.dir}"/>
              <pathelement path="${commons-logging.jar}"/>
              <pathelement path="${log4j.jar}"/>
          	</classpath>
            <batchtest toDir="${cactus.results.dir}/test-reports/xml">
                <fileset dir="${cactus.classes.dir}">
                    <include name="**/*CactusTest.class"/>
                    <exclude name="**/confignew/*CactusTest.class"/>
               	</fileset>
            </batchtest>
            <!-- newconfig test may have side effects, so run them after all the other tests -->
            <batchtest toDir="${cactus.results.dir}/test-reports/xml">
                <fileset dir="${cactus.classes.dir}">
                    <include name="**/confignew/*CactusTest.class"/>
               	</fileset>
            </batchtest>
            <formatter type="xml"/>
        </junit>
	    <junitreport>
	        <fileset dir="${cactus.results.dir}/test-reports/xml">
		        <include name="TEST-*.xml"/>
		    </fileset>
		    <report toDir="${cactus.results.dir}/test-reports/html"/>
	    </junitreport>
    </target>

    &tomcat-build;

    <target name="-myfaces-jar" description="create myfaces.jar if necessary" >
        <available file="${myfaces.jar}" property="myfaces.jar.available"/>
        <antcall target="-create-myfaces-jar"/>
    </target>

    <target name="-create-myfaces-jar" unless="myfaces.jar.available"
            description="creates myfaces.jar via main buildfile" >
        <ant dir="${project.dir}/build" antfile="build.xml" target="myfaces-jar" inheritall="false"/>
    </target>


    <target name="-myfaces-jsf-api-jar" description="create myfaces.jar if necessary" >
        <available file="${myfaces-jsf-api.jar}" property="myfaces.jar.available"/>
        <antcall target="-create-myfaces-jsf-api-jar"/>
    </target>

    <target name="-create-myfaces-jsf-api-jar" unless="myfaces.jar.available"
            description="creates myfaces-jsf-api.jar via main buildfile" >
        <ant dir="${project.dir}/build" antfile="build.xml" target="myfaces-jsf-api-jar" inheritall="false"/>
    </target>

</project>
