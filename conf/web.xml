<?xml version="1.0"?>

<!--
 * Copyright 2004 The Apache Software Foundation.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
-->

<!DOCTYPE web-app PUBLIC
  "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
  "http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

    <context-param>
        <param-name>javax.faces.CONFIG_FILES</param-name>
        <param-value>
            /WEB-INF/examples-config.xml
        </param-value>
        <description>
            Comma separated list of URIs of (additional) faces config files.
            (e.g. /WEB-INF/my-config.xml)
            See JSF 1.0 PRD2, 10.3.2
        </description>
    </context-param>

    <context-param>
        <param-name>javax.faces.STATE_SAVING_METHOD</param-name>
        <param-value>server</param-value>
        <description>
            State saving method: "client" or "server" (= default)
            See JSF Specification 2.5.2
        </description>
    </context-param>

    <context-param>
        <param-name>net.sourceforge.myfaces.ALLOW_JAVASCRIPT</param-name>
        <param-value>true</param-value>
        <description>
            This parameter tells MyFaces if javascript code should be allowed in the
            rendered HTML output.
            If javascript is allowed, command_link anchors will have javascript code
            that submits the corresponding form.
            If javascript is not allowed, the state saving info and nested parameters
            will be added as url parameters.
            Default: "true"
        </description>
    </context-param>
    
    <context-param>
        <param-name>net.sourceforge.myfaces.DETECT_JAVASCRIPT</param-name>
        <param-value>false</param-value>
        <description>
            This parameter tells MyFaces if javascript code should be allowed in the
            rendered HTML output.
            If javascript is allowed, command_link anchors will have javascript code
            that submits the corresponding form.
            If javascript is not allowed, the state saving info and nested parameters
            will be added as url parameters.
            Default: "false"

            Setting this param to true should be combined with STATE_SAVING_METHOD "server" for
            best results.

            This is an EXPERIMENTAL feature. You also have to enable the detector filter/filter mapping below to get
            JavaScript detection working.
        </description>
    </context-param>

    <context-param>
        <param-name>net.sourceforge.myfaces.PRETTY_HTML</param-name>
        <param-value>true</param-value>
        <description>
            If true, rendered HTML code will be formatted, so that it is "human readable".
            i.e. additional line separators and whitespace will be written, that do not
            influence the HTML code.
            Default: "true"
        </description>
    </context-param>



    <!-- WelcomeFile Filter -->
    <!--
    <filter>
        <filter-name>WelcomeFile Filter</filter-name>
        <filter-class>net.sourceforge.myfaces.webapp.filter.WelcomeFileFilter</filter-class>
        <description>
            Due to the manner in which the JSP / servlet lifecycle
            functions, it is not currently possible to specify default
            welcome files for a web application and map them to the
            MyFacesServlet.  Normally they will be mapped to the
            default servlet for the JSP container.  To offset this
            shortcoming, we utilize a servlet Filter which examines
            the URI of all incoming requests.
        </description>
    </filter>
    -->

    <!-- JavaScriptDetector Filter -->
<!--    <filter>-->
<!--        <filter-name>javascriptDetector</filter-name>-->
<!--        <filter-class>net.sourceforge.myfaces.webapp.filter.JavaScriptDetectorFilter</filter-class>-->
<!--    </filter>-->


    <!-- MultiPart Filter -->
    <filter>
        <filter-name>multipartFilter</filter-name>
        <filter-class>net.sourceforge.myfaces.custom.fileupload.MultipartFilter</filter-class>
        <init-param>
            <param-name>maxFileSize</param-name>
            <param-value>10m</param-value>
            <description>Set the size limit for uploaded files.
                Format: 10 - 10 bytes
                        10k - 10 KB
                        10m - 10 MB
            </description>
        </init-param>
    </filter>


    <!-- Filter Mappings -->

    <!-- see MyFaces Filter above for a description -->
    <!--
    <filter-mapping>
        <filter-name>WelcomeFile Filter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    -->

<!--    <filter-mapping>-->
<!--        <filter-name>javascriptDetector</filter-name>-->
<!--        <url-pattern>/_javascriptDetector_</url-pattern>-->
<!--    </filter-mapping>-->


    <filter-mapping>
        <filter-name>multipartFilter</filter-name>
        <url-pattern>*.jsf</url-pattern>
    </filter-mapping>



    <!-- Listener, that does all the startup work (configuration, init). -->
    <listener>
        <listener-class>net.sourceforge.myfaces.webapp.StartupServletContextListener</listener-class>
    </listener>


    <!-- Faces Servlet -->
    <servlet>
        <servlet-name>Faces Servlet</servlet-name>
        <servlet-class>javax.faces.webapp.FacesServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>


    <!-- Faces Servlet Mapping -->

    <!-- virtual path mapping -->
    <!--
    <servlet-mapping>
        <servlet-name>Faces Servlet</servlet-name>
        <url-pattern>/faces/*</url-pattern>
    </servlet-mapping>
    -->

    <!-- extension mapping -->
    <servlet-mapping>
        <servlet-name>Faces Servlet</servlet-name>
        <url-pattern>*.jsf</url-pattern>
    </servlet-mapping>


    <!-- Welcome files -->

    <welcome-file-list>
        <welcome-file>index.jsf</welcome-file>
        <welcome-file>index.jsp</welcome-file>
        <welcome-file>index.html</welcome-file>
    </welcome-file-list>


</web-app>
